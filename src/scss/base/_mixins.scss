@use "sass:math";

/**
 * Helper mixins
*/

// Media queries
@mixin bp($point) {
	@if $point == large {
		@media (min-width: 1280px) {
			@content;
		}
	} @else if $point == small {
		@media (max-width: 1279px) {
			@content;
		}
	}
}

// Text selection
@mixin text-selection($color-selection, $color-selection-bg) {
	::-moz-selection {
		// sass-lint:disable-line no-vendor-prefixes
		background: $color-selection-bg;
		color: $color-selection;
		text-shadow: none;
	}

	::selection {
		background: $color-selection-bg;
		color: $color-selection;
		text-shadow: none;
	}
}

//Placeholders
//Usage:
//@include placeholder;
@mixin placeholder {
	// sass-lint:disable no-vendor-prefixes
	::-webkit-input-placeholder {
		@content;
	}
	:-moz-placeholder {
		@content;
	}
	::-moz-placeholder {
		@content;
	}
	:-ms-input-placeholder {
		@content;
	}
}

@mixin rImage($fit: cover) {
	position: absolute;
	top: 0;
	left: 0;

	width: 100%;
	height: 100%;

	object-fit: $fit;
}

@function clampSize($min, $max) {
	@return max(#{$min}px, (#{$max} / var(--gfs)) * 1rem);
}

@function maxVw($min, $max) {
	@return max(#{$min}px, #{$max});
}

@function remsize($pixels) {
	@return calc((#{$pixels} / var(--gfs)) * 1rem);
}

@function get-real-vh($vh) {
	@return calc(var(--vh, 1vh) * #{$vh});
}

@function vhSize($px, $sizeDesign) {
	@return get-real-vh(math.div($px, $sizeDesign) * 100);
}

@mixin hover {
	@media (hover: hover) {
		&:hover {
			@content;
		}
	}

	@media (hover: none) {
		&:active {
			@content;
		}
	}
}
